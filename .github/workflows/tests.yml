name: "Tests"

on:
  push:
    branches: [ main ]
  pull_request: ~
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test:
    name: "
    Python ${{ matrix.python-version }}
    "
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: [
          '3.8',
          '3.9',
          '3.12',
          '3.13',
        ]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      UV_SYSTEM_PYTHON: true

    steps:

      - name: Acquire sources
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: |
            pyproject.toml
          cache-suffix: ${{ matrix.python-version }}
          enable-cache: true
          version: "latest"

      - name: Set up project
        run: |
          uv pip install --editable='.[develop,test]'

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Europe/Berlin"
          timezoneMacos: "Europe/Berlin"
          timezoneWindows: "European Standard Time"

      - name: Run software tests
        if: ${{ matrix.python-version == '3.8' }}
        run: poe test

      - name: Run linters and software tests
        if: ${{ matrix.python-version != '3.8' }}
        run: poe check

      # https://github.com/codecov/codecov-action
      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage.xml
          flags: main
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
